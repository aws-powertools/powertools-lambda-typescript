name: Deploy layer to all regions

permissions:
  contents: read

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      latest_published_version:
        description: "Latest npm published version to rebuild corresponding layer for, e.g. 1.0.2"
        default: "1.0.2"
        required: true

  workflow_call:
    inputs:
      latest_published_version:
        type: string
        description: "Latest npm published version to rebuild latest docs for, e.g. 2.0.0, 2.0.0a1 (pre-release)"
        required: true
      pre_release:
        description: "Publishes documentation using a pre-release tag (2.0.0a1)."
        default: false
        type: boolean
        required: false

jobs:
  # Build layer by running cdk synth in layer-publisher directory and uploading cdk.out for deployment
  build-layer:
    runs-on: ubuntu-latest
    if: ${{ (github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch') }}
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ github.sha }}
      - name: Setup Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: "22"
      - name: Setup dependencies
        uses: aws-powertools/actions/.github/actions/cached-node-modules@29979bc5339bf54f76a11ac36ff67701986bb0f0
      - name: CDK build
        run: npm run cdk -w layers -- synth --context PowertoolsPackageVersion=${{ inputs.latest_published_version }} -o cdk.out
      - name: Zip output
        run: zip -r cdk.out.zip layers/cdk.out
      - name: Archive CDK artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: cdk-layer-artifact
          path: cdk.out.zip

  # Deploy layer to all regions in beta account
  deploy-beta:
    needs:
      - build-layer
    uses: ./.github/workflows/reusable_deploy_layer_stack.yml
    permissions:
      id-token: write
      contents: read
    with:
      stage: "BETA"
      artifact-name: "cdk-layer-artifact"
      latest_published_version: ${{ inputs.latest_published_version }}
    secrets:
      target-account-role: ${{ secrets.AWS_LAYERS_BETA_ROLE_ARN }}

  # Deploy layer to all regions in prod account
  deploy-prod:
    needs:
      - deploy-beta
    uses: ./.github/workflows/reusable_deploy_layer_stack.yml
    permissions:
      id-token: write
      contents: read
    with:
      stage: "PROD"
      artifact-name: "cdk-layer-artifact"
      latest_published_version: ${{ inputs.latest_published_version }}
    secrets:
      target-account-role: ${{ secrets.AWS_LAYERS_PROD_ROLE_ARN }}

  update_layer_arn_docs:
    needs: [deploy-prod]
    # Force Github action to run only a single job at a time (based on the group name)
    # This is to prevent race-condition and inconsistencies with changelog push
    concurrency:
      group: changelog-build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: none
    steps:
      - name: Checkout repository # reusable workflows start clean, so we need to checkout again
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ github.sha }}
      - name: Download CDK layer artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: cdk-layer-stack
          pattern: cdk-layer-stack-* # merge all Layer artifacts created per region earlier (reusable_deploy_layer_stack.yml; step "Save Layer ARN artifact")
          merge-multiple: true
      - name: Replace layer versions in documentation
        run: |
          ls -la cdk-layer-stack/
          ./.github/scripts/update_layer_arn.sh cdk-layer-stack
      - name: Create PR
        id: create-pr
        uses: ./.github/actions/create-pr
        with: 
          files: 'docs/index.md'
          temp_branch_prefix: 'ci-layer-docs'
          pull_request_title: 'chore(ci): update layer ARN on documentation'
          github_token: ${{ secrets.GITHUB_TOKEN }}